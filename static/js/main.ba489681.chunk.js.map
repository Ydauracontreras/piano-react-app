{"version":3,"sources":["assets/img/descarga-arrow.svg","constants/note.js","utils/isAccidentalNote.js","utils/getKeyboardShortcutsForNote.js","Keyboard/AudioContext.js","Keyboard/AudioPlayer.js","Keyboard/InstrumentAudio.js","Instrument.js","utils/getNotesBetween.js","Piano.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","TONES","OCTAVE_NUMBERS","reduce","notes","octaveNumber","notesInOctave","map","tone","note","NOTES","includes","getKeyboardShortcutsForNote","keyboardMap","Object","keys","filter","shortcut","window","AudioContext","webkitAudioContext","NullSoundFontPlayerNoteAudio","stop","NullSoundFontPlayer","play","AudioPlayer","audioContext","soundFPlayer","setInstrument","instrumentName","SoundFontPlayer","instrument","then","soundFontPlayer","catch","e","playNote","InstrumentAudio","useState","instrumentPlayer","setInstrumentPlayer","useEffect","playNotes","length","isRegularKey","event","ctrlKey","metaKey","shiftKey","Instrument","startNote","endNote","renderPianoKey","startingIndex","indexOf","endingIndex","slice","getNotesBetween","notesPlaying","state","setState","addEventListener","handleKeyDown","handleKeyUp","getNoteFromKeyboardKey","keyboardKey","toUpperCase","repeat","key","notePlaying","isAccidentalNote","isNotePlaying","startPlayingNote","onPlayNoteStart","stopPlayingNote","onPlayNoteEnd","keyboardShortcut","Piano","accidentalKey","isPlaying","text","eventHandlers","className","naturalKey","Container","CssBaseline","href","src","flecha","KeyComponent","onMouseDown","onMouseUp","onTouchStart","onMouseOut","onTouchEnd","join","Q","2","W","3","E","R","5","T","6","Y","7","U","I","9","O","0","P","Z","S","X","D","C","F","V","B","H","N","J","M","L","A","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.ba489681.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/descarga-arrow.095eab30.svg\";","const TONES = [\"C\", \"C#\", \"D\", \"D#\", \"E\", \"F\", \"F#\", \"G\", \"G#\", \"A\", \"A#\", \"B\"];\r\n\r\nconst OCTAVE_NUMBERS = [1, 2, 3, 4, 5, 6, 7];\r\n\r\nexport default OCTAVE_NUMBERS.reduce((notes, octaveNumber) => {\r\n  const notesInOctave = TONES.map((tone) => `${tone}${octaveNumber}`);\r\n  return [...notes, ...notesInOctave];\r\n}, []);\r\n","import NOTES from \"../constants/note\";\r\n\r\nexport default (note) => {\r\n  return NOTES.includes(note) && note.includes(\"#\");\r\n};\r\n","export const getKeyboardShortcutsForNote = (keyboardMap, note) => {\r\n  const keyboardShortcuts = Object.keys(keyboardMap);\r\n\r\n  return keyboardShortcuts.filter((shortcut) => keyboardMap[shortcut] === note);\r\n};\r\n","export default window.AudioContext || window.webkitAudioContext;\n","import SoundFontPlayer from \"soundfont-player\";\r\nimport AudioContext from \"./AudioContext\";\r\n\r\nconst NullSoundFontPlayerNoteAudio = {\r\n  stop() {},\r\n};\r\n\r\nconst NullSoundFontPlayer = {\r\n  play() {\r\n    return NullSoundFontPlayerNoteAudio;\r\n  },\r\n};\r\n\r\nconst AudioPlayer = () => {\r\n  const audioContext = AudioContext && new AudioContext();\r\n  let soundFPlayer = NullSoundFontPlayer;\r\n\r\n  const Player = {\r\n    setInstrument(instrumentName) {\r\n      SoundFontPlayer.instrument(audioContext, instrumentName)\r\n        .then((soundFontPlayer) => {\r\n          soundFPlayer = soundFontPlayer;\r\n        })\r\n        .catch((e) => {\r\n          soundFPlayer = NullSoundFontPlayer;\r\n        });\r\n    },\r\n    playNote(note) {\r\n      return soundFPlayer.play(note);\r\n    },\r\n  };\r\n\r\n  return Player;\r\n};\r\n\r\nexport default AudioPlayer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport AudioPlayer from \"./AudioPlayer\";\r\n\r\nconst InstrumentAudio = ({ instrumentName, notes }) => {\r\n  const [instrumentPlayer, setInstrumentPlayer] = useState(null);\r\n  useEffect(() => {\r\n    setInstrumentPlayer(AudioPlayer());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (instrumentPlayer) {\r\n      setInstrument();\r\n      playNotes();\r\n    }\r\n  }, [instrumentPlayer]);\r\n\r\n  useEffect(() => {\r\n    if (notes && notes.length > 0) {\r\n      playNotes();\r\n    }\r\n  }, [notes]);\r\n\r\n  const setInstrument = () => {\r\n    instrumentPlayer.setInstrument(instrumentName);\r\n  };\r\n\r\n  const playNotes = () => {\r\n    if (instrumentPlayer) {\r\n      instrumentPlayer.playNote(notes[0]);\r\n    }\r\n  };\r\n  return null;\r\n};\r\n\r\nexport default InstrumentAudio;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport isAccidentalNote from \"./utils/isAccidentalNote\";\r\nimport { getKeyboardShortcutsForNote } from \"./utils/getKeyboardShortcutsForNote\";\r\nimport InstrumentAudio from \"./Keyboard/InstrumentAudio\";\r\nimport getNotesBetween from \"./utils/getNotesBetween\";\r\n\r\nconst isRegularKey = (event) => {\r\n  return !event.ctrlKey && !event.metaKey && !event.shiftKey;\r\n};\r\nconst Instrument = ({\r\n  instrumentName,\r\n  startNote,\r\n  endNote,\r\n  renderPianoKey,\r\n  keyboardMap,\r\n}) => {\r\n  const notes = getNotesBetween(startNote, endNote);\r\n  const [state, setState] = useState({\r\n    notesPlaying: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    window.addEventListener(\"keyup\", handleKeyUp);\r\n  }, []);\r\n\r\n  const getNoteFromKeyboardKey = (keyboardKey) => {\r\n    return keyboardMap[keyboardKey.toUpperCase()];\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (isRegularKey(e) && !e.repeat) {\r\n      const note = getNoteFromKeyboardKey(e.key);\r\n      if (note) {\r\n        setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\r\n      }\r\n    }\r\n  };\r\n  const handleKeyUp = (e) => {\r\n    if (isRegularKey(e) && !e.repeat) {\r\n      const note = getNoteFromKeyboardKey(e.key);\r\n      if (note) {\r\n        setState({\r\n          ...state,\r\n          notesPlaying: state.notesPlaying.filter(\r\n            (notePlaying) => notePlaying !== note\r\n          ),\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const onPlayNoteStart = (note) => {\r\n    setState({ ...state, notesPlaying: [...state.notesPlaying, note] });\r\n  };\r\n\r\n  const onPlayNoteEnd = (note) => {\r\n    setState({\r\n      ...state,\r\n      notesPlaying: state.notesPlaying.filter(\r\n        (notePlaying) => notePlaying !== note\r\n      ),\r\n    });\r\n  };\r\n\r\n  //rendering piano keys\r\n  return (\r\n    <Fragment>\r\n      {notes.map((note) => {\r\n        return (\r\n          <Fragment key={note}>\r\n            {renderPianoKey({\r\n              note,\r\n              isAccidentalNote: isAccidentalNote(note),\r\n              isNotePlaying: state.notesPlaying.includes(note),\r\n              startPlayingNote: () => onPlayNoteStart(note),\r\n              stopPlayingNote: () => onPlayNoteEnd(note),\r\n              keyboardShortcut: getKeyboardShortcutsForNote(keyboardMap, note),\r\n            })}\r\n          </Fragment>\r\n        );\r\n      })}\r\n      <InstrumentAudio\r\n        instrumentName={instrumentName}\r\n        notes={state.notesPlaying}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Instrument;\r\n","import NOTES from \"../constants/note\";\r\n\r\nexport default function getNotesBetween(startNote, endNote) {\r\n  const startingIndex = NOTES.indexOf(startNote);\r\n\r\n  const endingIndex = NOTES.indexOf(endNote);\r\n  return NOTES.slice(startingIndex, endingIndex + 1);\r\n}\r\n","import React, { Fragment } from \"react\";\r\nimport Instrument from \"./Instrument\";\r\nimport flecha from \"./assets/img/descarga-arrow.svg\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nconst Piano = () => {\r\n  const accidentalKey = ({ isPlaying, text, eventHandlers }) => {\r\n    return (\r\n      <div className=\"piano-accidental-key-wrapper\">\r\n        <button\r\n          className={`piano-accidental-key ${\r\n            isPlaying ? \"piano-accidental-key-playing\" : \"\"\r\n          } `}\r\n          {...eventHandlers}\r\n        >\r\n          <div className=\"piano-text\">{text}</div>\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const naturalKey = ({ isPlaying, text, eventHandlers }) => {\r\n    return (\r\n      <button\r\n        className={`piano-natural-key ${\r\n          isPlaying ? \"piano-natural-key-playing\" : \"\"\r\n        } `}\r\n        {...eventHandlers}\r\n      >\r\n        <div className=\"piano-text\">{text}</div>\r\n      </button>\r\n    );\r\n  };\r\n\r\n  const renderPianoKey = ({\r\n    isAccidentalNote,\r\n    isNotePlaying,\r\n    startPlayingNote,\r\n    stopPlayingNote,\r\n    keyboardShortcut,\r\n  }) => {\r\n    const KeyComponent = isAccidentalNote ? accidentalKey : naturalKey;\r\n\r\n    const eventHandlers = {\r\n      onMouseDown: startPlayingNote,\r\n      onMouseUp: stopPlayingNote,\r\n      onTouchStart: startPlayingNote,\r\n      onMouseOut: stopPlayingNote,\r\n      onTouchEnd: stopPlayingNote,\r\n    };\r\n\r\n    return (\r\n      <KeyComponent\r\n        isPlaying={isNotePlaying}\r\n        text={keyboardShortcut.join(\"/\")}\r\n        eventHandlers={eventHandlers}\r\n      />\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <CssBaseline />\r\n\r\n      <div className=\"title\">\r\n        <h1>React-Piano</h1>\r\n        <p>Teclado de piano interactivo hecho con react 🎹</p>\r\n        <div className=\"title-link\">\r\n          <a href=\"https://github.com/Ydauracontreras/piano-react-app\">\r\n            {\" \"}\r\n            GITHUB\r\n          </a>\r\n        </div>\r\n      </div>\r\n      <div className=\"mesagge\">\r\n        <p>Pruebalo haciendo clic, tocando o usando su teclado:</p>\r\n        <img className=\"flecha\" src={flecha} />\r\n      </div>\r\n\r\n      <div className=\"piano-container\">\r\n        <Instrument\r\n          instrumentName={\"acoustic_grand_piano\"}\r\n          startNote={\"C3\"}\r\n          endNote={\"B5\"}\r\n          renderPianoKey={renderPianoKey}\r\n          keyboardMap={{\r\n            Q: \"C3\",\r\n            2: \"C#3\",\r\n            W: \"D3\",\r\n            3: \"D#3\",\r\n            E: \"E3\",\r\n            R: \"F3\",\r\n            5: \"F#3\",\r\n            T: \"G3\",\r\n            6: \"G#3\",\r\n            Y: \"A3\",\r\n            7: \"A#3\",\r\n            U: \"B3\",\r\n            I: \"C4\",\r\n            9: \"C#4\",\r\n            O: \"D4\",\r\n            0: \"D#4\",\r\n            P: \"E4\",\r\n            Z: \"F4\",\r\n            S: \"F#4\",\r\n            X: \"G4\",\r\n            D: \"G#4\",\r\n            C: \"A4\",\r\n            F: \"A#4\",\r\n            V: \"B4\",\r\n            B: \"C5\",\r\n            H: \"C#5\",\r\n            N: \"D5\",\r\n            J: \"D#5\",\r\n            M: \"E5\",\r\n            \",\": \"F5\",\r\n            L: \"F#5\",\r\n            \".\": \"G5\",\r\n            \";\": \"G#5\",\r\n            \"/\": \"A5\",\r\n            \"'\": \"A#5\",\r\n            A: \"B5\",\r\n          }}\r\n        />\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Piano;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Piano from \"./Piano\";\n\nfunction App() {\n  return (\n    <div className=\"app-container\">\n      <Piano />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}